type: edu
custom_name: stage2
files:
- name: src/solver/Main.java
  visible: true
  text: |
    package solver;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/SolverTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.TestCase;
    import solver.Main;

    import java.util.Arrays;
    import java.util.List;
    import java.util.Scanner;

    import static java.lang.Math.abs;


    public class SolverTest extends StageTest<String> {

        public SolverTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            List<TestCase<String>> tests = List.of(
                new TestCase<String>()
                    .setInput("4 5 7\n3 9 9"),
                new TestCase<String>()
                    .setInput("1 2 3\n4 5 6"),
                new TestCase<String>()
                    .setInput("1.2 3.4 5.6\n7.8 9.0 12.3"),
                new TestCase<String>()
                    .setInput("23.21 32.12 65.43\n1 0 1")
            );

            for (var test : tests) {
                test.setAttach(solve(test.getInput()));
            }

            return tests;
        }

        private String solve(String input) {
            Scanner sc = new Scanner(input);

            double a = sc.nextDouble();
            double b = sc.nextDouble();
            double c = sc.nextDouble();
            double d = sc.nextDouble();
            double e = sc.nextDouble();
            double f = sc.nextDouble();

            double y = (f - c * (d / a)) / (e - b * (d / a));
            double x = (c - b * y) / a;

            return x + " " + y;
        }

        @Override
        public CheckResult check(String reply, String clue) {
            try {
                double[] actual = Arrays.stream(reply.split(" ")).mapToDouble(Double::parseDouble).toArray();
                double[] expected = Arrays.stream(clue.split(" ")).mapToDouble(Double::parseDouble).toArray();
                if (actual.length != expected.length) {
                    return CheckResult.wrong("");
                }
                for (int i = 0; i < actual.length; i++) {
                    if (abs(actual[i] - expected[i]) > 0.001) {
                        return CheckResult.wrong("");
                    }
                }
                return CheckResult.correct();
            }
            catch (NumberFormatException ex) {
                return new CheckResult(false, "Can't parse numbers - check if you don't print any additional symbols except a space between the numbers");
            }
        }
    }
  learner_created: false
- name: src/solver/logic/Solver.java
  visible: true
  text: |
    package solver.logic;

    public class Solver {
        private double a;
        private double b;
        private double x;

        public Solver(double a, double b) {
            this.a = a;
            this.b = b;
            this.x = 0;
        }

        public void solve(){

            try {
                x = 1.0*b/a;
            } catch (Exception e) {
                System.out.println("Cant calculate x");
            }
        }

        public double getX() {
            return x;
        }
    }
  learner_created: true
- name: src/solver/userInterface/UI.java
  visible: true
  text: |
    package solver.userInterface;

    import solver.logic.Solver;

    import java.util.Scanner;

    public class UI {
        private Scanner scanner;

        public UI(Scanner scanner) {
            this.scanner = scanner;
        }

        public void start(){
            double a = scanner.nextDouble();
            double b = scanner.nextDouble();
            Solver solver = new Solver(a,b);
            solver.solve();
            System.out.println(solver.getX());
        }
    }
  learner_created: true
feedback_link: https://hyperskill.org/projects/40/stages/210/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/40/stages/210/implement">JetBrains
    Academy</a>
  time: Tue, 22 Sep 2020 22:46:48 UTC
record: 2
